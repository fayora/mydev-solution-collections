{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "adminUserName":{
         "type":"string",
         "defaultValue":"azureuser",
         "metadata":{
            "description":"The user name for administrator of the master node."
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The password for the administrator. Pick a complex password with uppercase letters, lowercase letters, digits, and symbols. The password cannot be longer than 16 characters."
         }
      },
      "hpcUserName":{
         "type":"string",
         "defaultValue":"hpc",
         "metadata":{
            "description":"The user name for running HPC applications with a shared home directory and SSH public key authentication setup.  This user cannot log in from outside the cluster."
         }
      },
      "image":{
         "type":"string",
         "defaultValue":"OpenLogic:CentOS:7.3",
         "allowedValues":[
            "OpenLogic:CentOS-HPC:7.3",
            "OpenLogic:CentOS:7.3"
         ],
         "metadata":{
            "description":"The operating system image to use. Select the HPC version if you need to run MPI jobs."
         }
      },
      "headNodeSize":{
         "type":"string",
         "defaultValue":"Standard_A2_v2",
         "allowedValues":[
            "Standard_A2_v2",
            "Standard_A4_v2",
            "Standard_A8_v2",
            "Standard_A2m_v2",
            "Standard_A4m_v2",
            "Standard_A8m_v2",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_DS15_v2",
            "Standard_D2s_v3",
            "Standard_D4s_v3",
            "Standard_D8s_v3",
            "Standard_D16s_v3",
            "Standard_D32s_v3",
            "Standard_D48s_v3",
            "Standard_D64s_v3",
            "Standard_D2s_v4",
            "Standard_D4s_v4",
            "Standard_D8s_v4",
            "Standard_D16s_v4",
            "Standard_D32s_v4",
            "Standard_D48s_v4",
            "Standard_D64s_v4",
            "Standard_E2s_v3",
            "Standard_E4s_v3",
            "Standard_E8s_v3",
            "Standard_E16s_v3",
            "Standard_E20s_v3",
            "Standard_E32s_v3",
            "Standard_E48s_v3",
            "Standard_E64s_v3",
            "Standard_E64is_v3",
            "Standard_E2s_v4",
            "Standard_E4s_v4",
            "Standard_E8s_v4",
            "Standard_E16s_v4",
            "Standard_E20s_v4",
            "Standard_E32s_v4",
            "Standard_E48s_v4",
            "Standard_E64s_v4",
            "Standard_E80is_v4",
            "Standard_F2s_v2",
            "Standard_F4s_v2",
            "Standard_F8s_v2",
            "Standard_F16s_v2",
            "Standard_F32s_v2",
            "Standard_F48s_v2",
            "Standard_F64s_v2",
            "Standard_F72s_v2",
            "Standard_H8",
            "Standard_H16",
            "Standard_H8m",
            "Standard_H16m",
            "Standard_H16mr",
            "Standard_H16r",
            "Standard_HB60rs",
            "Standard_HB120rs_v2",
            "Standard_HB120-16rs_v3",
            "Standard_HB120-32rs_v3",
            "Standard_HB120-64rs_v3",
            "Standard_HB120-96rs_v3",
            "Standard_HB120rs_v3",
            "Standard_HC44rs"
         ],
         "metadata":{
            "description":"Size of the master node. You must select an H-series size if you selected an HPC operating system image."
         }
      },
      "workerNodeSize":{
         "type":"string",
         "defaultValue":"Standard_A2_v2",
         "allowedValues":[
            "Standard_A2_v2",
            "Standard_A4_v2",
            "Standard_A8_v2",
            "Standard_A2m_v2",
            "Standard_A4m_v2",
            "Standard_A8m_v2",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_DS15_v2",
            "Standard_D2s_v3",
            "Standard_D4s_v3",
            "Standard_D8s_v3",
            "Standard_D16s_v3",
            "Standard_D32s_v3",
            "Standard_D48s_v3",
            "Standard_D64s_v3",
            "Standard_D2s_v4",
            "Standard_D4s_v4",
            "Standard_D8s_v4",
            "Standard_D16s_v4",
            "Standard_D32s_v4",
            "Standard_D48s_v4",
            "Standard_D64s_v4",
            "Standard_E2s_v3",
            "Standard_E4s_v3",
            "Standard_E8s_v3",
            "Standard_E16s_v3",
            "Standard_E20s_v3",
            "Standard_E32s_v3",
            "Standard_E48s_v3",
            "Standard_E64s_v3",
            "Standard_E64is_v3",
            "Standard_E2s_v4",
            "Standard_E4s_v4",
            "Standard_E8s_v4",
            "Standard_E16s_v4",
            "Standard_E20s_v4",
            "Standard_E32s_v4",
            "Standard_E48s_v4",
            "Standard_E64s_v4",
            "Standard_E80is_v4",
            "Standard_F2s_v2",
            "Standard_F4s_v2",
            "Standard_F8s_v2",
            "Standard_F16s_v2",
            "Standard_F32s_v2",
            "Standard_F48s_v2",
            "Standard_F64s_v2",
            "Standard_F72s_v2",
            "Standard_H8",
            "Standard_H16",
            "Standard_H8m",
            "Standard_H16m",
            "Standard_H16mr",
            "Standard_H16r",
            "Standard_HB60rs",
            "Standard_HB120rs_v2",
            "Standard_HB120-16rs_v3",
            "Standard_HB120-32rs_v3",
            "Standard_HB120-64rs_v3",
            "Standard_HB120-96rs_v3",
            "Standard_HB120rs_v3",
            "Standard_HC44rs"
         ],
         "metadata":{
            "description":"Size of the worker nodes. You must select an H-series size if you selected an HPC operating system image."
         }
      },
      "workerNodeCount":{
         "type":"int",
         "defaultValue":2,
         "metadata":{
            "description":"The number of worker nodes in the cluster, in addition to the master node."
         }
      },
      "dataDiskSize":{
         "type":"int",
         "defaultValue":32,
         "allowedValues":[
            32,
            64,
            128,
            512,
            1024,
            2048,
            4095
         ],
         "metadata":{
            "description":"The size in GB of each data disk that is attached to each one of the cluster nodes. A RAID-0 volume will be created using 2 disks on each node and then that volume will be added to BeeGFS."
         }
      },
      "storageAccountType":{
         "type":"string",
         "defaultValue":"Standard_LRS",
         "allowedValues":[
            "Standard_LRS",
            "Premium_LRS"
         ],
         "metadata":{
            "description":"The type of storage account to use for disks. Select Premium for better performance, but higher costs to run."
         }
      },
      "clusterFilesystemLocation":{
         "type":"string",
         "defaultValue":"/data/beegfs/storage",
         "allowedValues":[
            "/data/beegfs/storage",
            "/mnt/resource/storage"
         ],
         "metadata":{
            "description":"Local path on each node where the BeeGFS storage file system will be mounted."
         }
      }
   },
   "variables":{
      "imagePublisher":"[split(parameters('image'), ':')[0]]",
      "imageOffer":"[split(parameters('image'), ':')[1]]",
      "imageSku":"[split(parameters('image'), ':')[2]]",
      "publicIPAddressType":"Dynamic",
      "publicIPAddressName":"publicips",
      "masterVMName":"master",
      "workerVMName":"worker",
      "armApiVersion":"2015-06-15",
      "computeApiVersion":"2016-04-30-preview",
      "avSetName":"avSet",
      "masterDiskCount":2,
      "workerDiskCount":2,
      "nicName":"nic",
      "networkSettings":{
         "virtualNetworkName":"virtualnetwork",
         "addressPrefix":"10.0.0.0/16",
         "subnet":{
            "dse":{
               "name":"dse",
               "prefix":"10.0.0.0/24",
               "vnet":"virtualnetwork"
            }
         },
         "statics":{
            "workerRange":{
               "base":"10.0.0.",
               "start":5
            },
            "master":"10.0.0.254"
         }
      },
      "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('networkSettings').virtualNetworkName)]",
      "subnetRef":"[concat(variables('vnetID'),'/subnets/',variables('networkSettings').subnet.dse.name)]",
      "templateBaseUrl":"https://raw.githubusercontent.com/fayora/mydev-solution-collections/main/publish/SLURM/",
      "installationCLI":"[concat('bash azuredeploy.sh ', variables('masterVMName'), ' ', variables('workerVMName'), ' ', parameters('workerNodeCount'), ' ', parameters('hpcUserName'), ' ', variables('templateBaseUrl'), ' ', parameters('clusterFilesystemLocation'), ' ', variables('imageOffer'))]"
   },
   "resources":[
      {
         "type":"Microsoft.Compute/availabilitySets",
         "name":"[variables('avSetName')]",
         "apiVersion":"[variables('computeApiVersion')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "platformFaultDomainCount":"2",
            "platformUpdateDomainCount":"2",
            "managed":"true"
         }
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('networkSettings').virtualNetworkName]",
         "location":"[resourceGroup().location]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('networkSettings').addressPrefix]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('networkSettings').subnet.dse.name]",
                  "properties":{
                     "addressPrefix":"[variables('networkSettings').subnet.dse.prefix]"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "apiVersion":"[variables('armApiVersion')]",
         "name":"[variables('publicIPAddressName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "publicIPAllocationMethod":"[variables('publicIPAddressType')]"
         }
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"nsg",
         "apiVersion":"[variables('armApiVersion')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"SSH",
                  "properties":{
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               }
            ]
         },
         "dependsOn":[

         ]
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('nicName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]",
            "Microsoft.Network/networkSecurityGroups/nsg"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[variables('networkSettings').statics.master]",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ],
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
            }
         }
      },
      {
         "type":"Microsoft.Compute/disks",
         "name":"[concat('masterdatadisk', copyindex())]",
         "apiVersion":"[variables('computeApiVersion')]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"foo",
            "count":"[variables('masterDiskCount')]"
         },
         "properties":{
            "creationData":{
               "createOption":"Empty"
            },
            "accountType":"[parameters('storageAccountType')]",
            "diskSizeGB":"[parameters('dataDiskSize')]"
         }
      },
      {
         "type":"Microsoft.Compute/disks",
         "name":"[concat('workerdatadisk', copyindex())]",
         "apiVersion":"[variables('computeApiVersion')]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"foo",
            "count":"[mul(parameters('workerNodeCount'), variables('workerDiskCount'))]"
         },
         "properties":{
            "creationData":{
               "createOption":"Empty"
            },
            "accountType":"[parameters('storageAccountType')]",
            "diskSizeGB":"[parameters('dataDiskSize')]"
         }
      },
      {
         "apiVersion":"[variables('computeApiVersion')]",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[variables('masterVMName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
            "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]",
            "Microsoft.Compute/disks/masterdatadisk0",
            "Microsoft.Compute/disks/masterdatadisk1"
         ],
         "properties":{
            "availabilitySet":{
               "id":"[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
            },
            "hardwareProfile":{
               "vmSize":"[parameters('headNodeSize')]"
            },
            "osProfile":{
               "computername":"[variables('masterVMName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSku')]",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage"
               },
               "dataDisks":[
                  {
                     "lun":1,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 0))]"
                     }
                  },
                  {
                     "lun":2,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 1))]"
                     }
                  }
               ]
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                  }
               ]
            }
         }
      },
      {
         "apiVersion":"[variables('computeApiVersion')]",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(variables('masterVMName'), '/Installation')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'))]"
         ],
         "properties":{
            "publisher":"Microsoft.OSTCExtensions",
            "type":"CustomScriptForLinux",
            "typeHandlerVersion":"1.3",
            "settings":{
               "fileUris":[
                  "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
               ],
               "commandToExecute":"[variables('installationCLI')]"
            }
         }
      },
      {
         "apiVersion":"[variables('computeApiVersion')]",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(variables('workerVMName'), copyindex(), '/Installation')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('workerVMName'), copyindex())]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "publisher":"Microsoft.OSTCExtensions",
            "type":"CustomScriptForLinux",
            "typeHandlerVersion":"1.3",
            "settings":{
               "fileUris":[
                  "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
               ],
               "commandToExecute":"[variables('installationCLI')]"
            }
         }
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[concat(variables('nicName'), 'worker', copyindex())]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[concat(variables('networkSettings').statics.workerRange.base, copyindex(variables('networkSettings').statics.workerRange.start))]",
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"[variables('computeApiVersion')]",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[concat(variables('workerVMName'), copyindex())]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'worker', copyindex())]",
            "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]",
            "[concat('Microsoft.Compute/disks/', 'workerdatadisk', add(mul(copyindex(), variables('workerDiskCount')), 0))]",
            "[concat('Microsoft.Compute/disks/', 'workerdatadisk', add(mul(copyindex(), variables('workerDiskCount')), 1))]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "availabilitySet":{
               "id":"[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
            },
            "hardwareProfile":{
               "vmSize":"[parameters('workerNodeSize')]"
            },
            "osProfile":{
               "computername":"[concat(variables('workerVMName'), copyindex())]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSku')]",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage"
               },
               "dataDisks":[
                  {
                     "lun":1,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('workerdatadisk', add(mul(copyindex(), variables('workerDiskCount')), 0)))]"
                     }
                  },
                  {
                     "lun":2,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('workerdatadisk', add(mul(copyindex(), variables('workerDiskCount')), 1)))]"
                     }
                  }
               ]
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'worker', copyindex()))]"
                  }
               ]
            }
         }
      }
   ]
}
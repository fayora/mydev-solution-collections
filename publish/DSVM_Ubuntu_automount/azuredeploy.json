{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "VirtualMachineName": {
        "type": "string",
        "defaultValue": "",
        "minLength": 4,
        "metadata": {
          "description": "The name you want to give your Virtual Machine. Linux VM names may only contain letters, numbers, '.', and '-'."
        }
      },
      "Size": {
        "type": "string",
        "defaultValue": "4-CPUs,16GB-RAM",
        "allowedValues": [
          "4-CPUs,16GB-RAM",
          "8-CPUs,32GB-RAM",
          "16-CPUs,64GB-RAM",
          "V100-GPU,6-CPUs,112GB-RAM"
        ],
        "metadata": {
          "description": "Choose a virtual machine size with or without a GPU."
        }
      },
      "adminUsername": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "metadata": {
          "description": "The username for the Administrator's account. A username must only contain letters, numbers, hyphens, and underscores and may not start with a hyphen or number."
        }
      },
      "adminPassword": {
          "type": "securestring",
          "minLength": 12,
          "maxLength": 72,
          "metadata": {
          "description": "Password for the Virtual Machine. It must be at least 12 characters long, and have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character."
          }
      },
      "instanceType": {
        "type": "string",
        "defaultValue": "Spot",
        "allowedValues": [
          "Spot",
          "Regular"
        ],
        "metadata": {
          "description": "Spot instances cost less but can be evicted anytime if Azure needs resources."
        }
      },
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "uniqueVMName": "[concat(replace(toLower(parameters('VirtualMachineName')), '.', ''), '-', uniqueString(parameters('VirtualMachineName')))]",
      "virtualNetworkName": "[concat('VNet', uniqueString(resourceGroup().id))]",
      "subnetName": "[concat('Subnet', uniqueString(resourceGroup().id))]",
      "networkSecurityGroupName": "[concat('NSG', uniqueString(resourceGroup().id))]",
      "networkInterfaceName": "[concat(parameters('VirtualMachineName'),'NetInt')]",
      "publicIpAddressName": "[concat(parameters('VirtualMachineName'), 'PublicIP' )]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
      "osDiskType": "Standard_LRS",
      "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
      "storageAccountType": "Standard_LRS",
      "storageAccountKind": "Storage",
      "vmSize": {
        "4-CPUs,16GB-RAM": "Standard_B4s_v2",
        "8-CPUs,32GB-RAM": "Standard_B8as_v2",
        "16-CPUs,64GB-RAM": "Standard_B16as_v2",
        "V100-GPU,6-CPUs,112GB-RAM": "Standard_NC6s_v3"
      },
      "instancePriority": {
        "Spot": "Spot",
        "Regular": "Regular"
      },
      "instanceEvictionPolicy": {
        "Spot": "Deallocate",
        "Regular": null
      },
      "instanceMaxPrice": {
        "Spot": -1,
        "Regular": null
      },
      "scriptParse": "aW1wb3J0IGFyZ3BhcnNlCmltcG9ydCByZQppbXBvcnQganNvbgppbXBvcnQgb3MKCmRlZiBwYXJzZV9maWxlKGlucHV0X3BhdGgpOgogICAgd2l0aCBvcGVuKGlucHV0X3BhdGgsICdyJykgYXMgZjoKICAgICAgICBkYXRhID0gZi5yZWFkKCkKCiAgICBlbnRyaWVzID0gcmUuZmluZGFsbChyJ1xbKC4qPylcXScsIGRhdGEpCgogICAgb25seV9uYW1lID0gW10KICAgIG9ubHlfa2V5ID0gW10KICAgIG9ubHlfZmlsZSA9IFtdCgogICAgZm9yIGVudHJ5IGluIGVudHJpZXM6CiAgICAgICAgcGFpcnMgPSByZS5maW5kYWxsKHInIiguKj8pIjoiKC4qPykiJywgZW50cnkpCiAgICAgICAga2V5cyA9IFtrIGZvciBrLCBfIGluIHBhaXJzXQogICAgICAgIHVuaXF1ZV9rZXlzID0gc2V0KGtleXMpCgogICAgICAgIGlmIGxlbih1bmlxdWVfa2V5cykgPT0gMToKICAgICAgICAgICAga2V5ID0ga2V5c1swXQogICAgICAgICAgICB2YWx1ZXMgPSBbdiBmb3IgXywgdiBpbiBwYWlyc10KICAgICAgICAgICAgaWYga2V5ID09ICJTdG9yYWdlQWNjb3VudE5hbWUiOgogICAgICAgICAgICAgICAgb25seV9uYW1lLmFwcGVuZCh2YWx1ZXMpCiAgICAgICAgICAgIGVsaWYga2V5ID09ICJTdG9yYWdlQWNjb3VudEtleSI6CiAgICAgICAgICAgICAgICBvbmx5X2tleS5hcHBlbmQodmFsdWVzKQogICAgICAgICAgICBlbGlmIGtleSA9PSAiRmlsZXNoYXJlTmFtZSI6CiAgICAgICAgICAgICAgICBvbmx5X2ZpbGUuYXBwZW5kKHZhbHVlcykKCiAgICByZXR1cm4gewogICAgICAgICJTdG9yYWdlQWNjb3VudE5hbWUiOiBvbmx5X25hbWUsCiAgICAgICAgIlN0b3JhZ2VBY2NvdW50S2V5Ijogb25seV9rZXksCiAgICAgICAgIkZpbGVzaGFyZU5hbWUiOiBvbmx5X2ZpbGUKICAgIH0KCmRlZiBtYWluKCk6CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0iRmlsdGVyIGVudHJpZXMgYnkgc2luZ2xlIGtleSB0eXBlIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy0taW5wdXQnLCByZXF1aXJlZD1UcnVlLCBoZWxwPSdQYXRoIHRvIGlucHV0IGZpbGUnKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLS1vdXRwdXQnLCByZXF1aXJlZD1UcnVlLCBoZWxwPSdQYXRoIHRvIG91dHB1dCBKU09OIGZpbGUnKQoKICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgogICAgaWYgbm90IG9zLnBhdGguaXNmaWxlKGFyZ3MuaW5wdXQpOgogICAgICAgIHByaW50KGYiRXJyb3I6IEZpbGUgJ3thcmdzLmlucHV0fScgZG9lcyBub3QgZXhpc3QuIikKICAgICAgICByZXR1cm4KCiAgICByZXN1bHQgPSBwYXJzZV9maWxlKGFyZ3MuaW5wdXQpCgogICAgd2l0aCBvcGVuKGFyZ3Mub3V0cHV0LCAndycpIGFzIGY6CiAgICAgICAganNvbi5kdW1wKHJlc3VsdCwgZiwgaW5kZW50PTIpCgogICAgcHJpbnQoZiJGaWx0ZXJlZCBvdXRwdXQgd3JpdHRlbiB0byB7YXJncy5vdXRwdXR9IikKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk=",
      "scriptMount": "aW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2VzcwoKZGVmIHJ1bl9tb3VudF9zY3JpcHQoanNvbl9kYXRhKToKICAgIGFjY291bnRfbmFtZXMgPSBqc29uX2RhdGEuZ2V0KCJTdG9yYWdlQWNjb3VudE5hbWUiLCBbXSlbMF0KICAgIGFjY291bnRfa2V5cyA9IGpzb25fZGF0YS5nZXQoIlN0b3JhZ2VBY2NvdW50S2V5IiwgW10pWzBdCiAgICBmaWxlc2hhcmVzID0ganNvbl9kYXRhLmdldCgiRmlsZXNoYXJlTmFtZSIsIFtdKVswXQoKICAgICMgTWF0Y2ggdGhlbSBieSBpbmRleAogICAgZm9yIG5hbWUsIGtleSwgc2hhcmUgaW4gemlwKGFjY291bnRfbmFtZXMsIGFjY291bnRfa2V5cywgZmlsZXNoYXJlcyk6CiAgICAgICAgY3JlZF9kaXIgPSAiL2V0Yy9zbWJjcmVkZW50aWFscyIKICAgICAgICBjcmVkX2ZpbGUgPSBmIntjcmVkX2Rpcn0ve25hbWV9LmNyZWQiCiAgICAgICAgbW91bnRfcG9pbnQgPSBmIi9wcm9qZWN0cmVwb3Mve3NoYXJlfSIKICAgICAgICByZW1vdGVfcGF0aCA9IGYiLy97bmFtZX0uZmlsZS5jb3JlLndpbmRvd3MubmV0L3tzaGFyZX0iCgogICAgICAgIHByaW50KGYiQ3JlYXRpbmcgY3JlZGVudGlhbCBmaWxlIGZvciB7bmFtZX0uLi4iKQoKICAgICAgICBvcy5tYWtlZGlycyhjcmVkX2RpciwgZXhpc3Rfb2s9VHJ1ZSkKICAgICAgICB3aXRoIG9wZW4oY3JlZF9maWxlLCAidyIpIGFzIGY6CiAgICAgICAgICAgIHByaW50KGYidXNlcm5hbWU9e25hbWV9IiwgZmlsZT1mKQogICAgICAgICAgICBwcmludChmInBhc3N3b3JkPXtrZXl9IiwgZmlsZT1mKQoKICAgICAgICBvcy5jaG1vZChjcmVkX2ZpbGUsIDBvNjAwKQoKICAgICAgICBwcmludChmIkNyZWF0aW5nIG1vdW50IHBvaW50IGF0IHttb3VudF9wb2ludH0uLi4iKQogICAgICAgIG9zLm1ha2VkaXJzKG1vdW50X3BvaW50LCBleGlzdF9vaz1UcnVlKQoKICAgICAgICBtb3VudF9vcHRzID0gZiJ2ZXJzPTMuMS4xLGNyZWRlbnRpYWxzPXtjcmVkX2ZpbGV9LGRpcl9tb2RlPTA3NzcsZmlsZV9tb2RlPTA3Nzcsc2VydmVyaW5vLG5vc2hhcmVzb2NrLGFjdGltZW89MzAsYXV0byxtZnN5bWxpbmtzLF9uZXRkZXYiCiAgICAgICAgbW91bnRfY21kID0gWyJzdWRvIiwgIm1vdW50IiwgIi10IiwgImNpZnMiLCByZW1vdGVfcGF0aCwgbW91bnRfcG9pbnQsICItbyIsIG1vdW50X29wdHNdCgogICAgICAgIHByaW50KGYiTW91bnRpbmcge3JlbW90ZV9wYXRofSB0byB7bW91bnRfcG9pbnR9Li4uIikKICAgICAgICB0cnk6CiAgICAgICAgICAgIHN1YnByb2Nlc3MucnVuKG1vdW50X2NtZCwgY2hlY2s9VHJ1ZSkKICAgICAgICAgICAgcHJpbnQoZiJNb3VudGVkIHtyZW1vdGVfcGF0aH0gc3VjY2Vzc2Z1bGx5LiIpCiAgICAgICAgZXhjZXB0IHN1YnByb2Nlc3MuQ2FsbGVkUHJvY2Vzc0Vycm9yIGFzIGU6CiAgICAgICAgICAgIHByaW50KGYiRXJyb3IgbW91bnRpbmcge3JlbW90ZV9wYXRofToge2V9IikKCiAgICAgICAgIyBGb3IgYSBtb3JlIHBlcnNpc3RlbnQgbW91bnRpbmcKICAgICAgICBmc3RhYl9saW5lID0gZiJ7cmVtb3RlX3BhdGh9IHttb3VudF9wb2ludH0gY2lmcyB7bW91bnRfb3B0c30gMCAwXG4iCiAgICAgICAgd2l0aCBvcGVuKCIvZXRjL2ZzdGFiIiwgInIiKSBhcyBmc3RhYjoKICAgICAgICAgICAgaWYgZnN0YWJfbGluZS5zdHJpcCgpIG5vdCBpbiBbbGluZS5zdHJpcCgpIGZvciBsaW5lIGluIGZzdGFiXToKICAgICAgICAgICAgICAgIHByaW50KGYiQWRkaW5nIGVudHJ5IHRvIC9ldGMvZnN0YWIgZm9yIHtzaGFyZX0uLi4iKQogICAgICAgICAgICAgICAgd2l0aCBvcGVuKCIvZXRjL2ZzdGFiIiwgImEiKSBhcyBmc3RhYl9hcHBlbmQ6CiAgICAgICAgICAgICAgICAgICAgZnN0YWJfYXBwZW5kLndyaXRlKGZzdGFiX2xpbmUpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludChmIi9ldGMvZnN0YWIgZW50cnkgZm9yIHtzaGFyZX0gYWxyZWFkeSBleGlzdHMuIikKCmRlZiBtYWluKCk6CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0iTW91bnQgQXp1cmUgZmlsZSBzaGFyZXMgdXNpbmcgSlNPTiBpbnB1dCIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctLWlucHV0JywgcmVxdWlyZWQ9VHJ1ZSwgaGVscD0nUGF0aCB0byBwcm9jZXNzZWQgSlNPTiBmaWxlJykKICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgogICAgd2l0aCBvcGVuKGFyZ3MuaW5wdXQsICJyIikgYXMgZjoKICAgICAgICBkYXRhID0ganNvbi5sb2FkKGYpCgogICAgcnVuX21vdW50X3NjcmlwdChkYXRhKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIG1haW4oKQ==",

      "repositoriesRaw": "[string(variables('loome').ProjectResources.DataRepositories)]",
      "repositoriesEscaped": "[replace(variables('repositoriesRaw'), '\"', '\\\"')]",
      "userDataScript": [
        "#!/bin/bash",
        "mkdir -p /opt/projectrepos",
        "[concat('echo ', variables('repositoriesEscaped'), '> /opt/projectrepos/repositories.json')]",
        "chmod 644 /opt/projectrepos/repositories.json",
        "[concat('echo ', variables('scriptParse'), ' | base64 -d > /opt/projectrepos/parse.py')]",
        "[concat('echo ', variables('scriptMount'), ' | base64 -d > /opt/projectrepos/mount_azure.py')]",
        "sudo python3 /opt/projectrepos/parse.py --input /opt/projectrepos/repositories.json --output /opt/projectrepos/processed.json",
        "sudo python3 /opt/projectrepos/mount_azure.py --input /opt/projectrepos/processed.json",
        "sleep 5 && sudo rm -r /opt/projectrepos"
      ]
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[variables('nsgId')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "JupyterHub",
              "properties": {
                "priority": 1010,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "8000"
              }
            },
            {
              "name": "SSH",
              "properties": {
                "priority": 1030,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/24"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-05-01",
        "name": "[variables('publicIpAddressName')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIpAllocationMethod": "Dynamic","dnsSettings": {
            "domainNameLabel": "[variables('uniqueVMName')]"
            }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "[variables('storageAccountKind')]"
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "name": "[variables('uniqueVMName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')[parameters('Size')]]",
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "[variables('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "microsoft-dsvm",
              "offer": "ubuntu-2204",
              "sku": "2204-gen2",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[variables('uniqueVMName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[base64(join(variables('userDataScript'), '\n'))]"
          },
          "priority": "[variables('instancePriority')[parameters('instanceType')]]",
          "evictionPolicy": "[variables('instanceEvictionPolicy')[parameters('instanceType')]]",
          "billingProfile": {
            "maxPrice": "[variables('instanceMaxPrice')[parameters('instanceType')]]"
          }
        }
      }
    ],
    "outputs": {
      "publicIpAddressName": {
        "type": "string",
        "value": "[variables('publicIpAddressName')]"
      },
      "subscriptionId": {
        "type": "string",
        "value": "[subscription().subscriptionId]"
       },
       "resourceGroupName1": {
        "type": "string",
        "value": "[resourceGroup().name]"
       },
       "fullyQualifiedDomainName": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
       },
       "loginUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
       },
       "deployedVirtualMachineName": {
        "type": "string",
        "value": "[variables('uniqueVMName')]"
       }
    }
}
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AIDeploymentName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 4,
      "maxLength": 12,
      "metadata": {
        "description": "Specify a name to differentiate this AI deployment from your other AI deployments."
      }
    }
  },
  "variables": {
    "nameToLower": "[toLower(format('{0}', parameters('AIDeploymentName')))]",
    "nameNoHyphens": "[replace(variables('nameToLower'), '-', '')]",
    "nameNoSpaces": "[replace(variables('nameNoHyphens'), ' ', '')]",
    "name": "[variables('nameNoSpaces')]",
    "uniqueSuffix": "[substring(uniqueString(deployment().properties.templateHash, deployment().name), 0, 6)]",
    "aiHubFriendlyName": "[variables('name')]",
    "aiHubDescription": "This is an AI resource for use in Azure AI Studio.",
    "location": "[resourceGroup().location]",
    "tags": {
      "aiHubName": "[parameters('AIDeploymentName')]",
      "Loome-AI": "true"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('dependencies-{0}-deployment', variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiHubFriendlyName": "[variables('aiHubFriendlyName')]",
          "aiHubDescription": "[variables('aiHubDescription')]",
          "location": {
            "value": "[variables('location')]"
          },
          "storageName": {
            "value": "[format('st{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "keyvaultName": {
            "value": "[format('kv-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "applicationInsightsName": {
            "value": "[format('appi-{0}-{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "containerRegistryName": {
            "value": "[format('cr{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "aiServicesName": {
            "value": "[format('ais{0}{1}', variables('name'), variables('uniqueSuffix'))]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "aiHubFriendlyName": {
              "type": "string",
              "metadata": {
                "description": "AI hub display name"
              }
            },
            "aiHubDescription": {
              "type": "string",
              "metadata": {
                "description": "AI hub description"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "aiServicesName": {
              "type": "string",
              "metadata": {
                "description": "AI services name"
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Application Insights resource name"
              }
            },
            "containerRegistryName": {
              "type": "string",
              "metadata": {
                "description": "Container registry name"
              }
            },
            "keyvaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault"
              }
            },
            "storageName": {
              "type": "string",
              "metadata": {
                "description": "Name of the storage account"
              }
            },
            "storageSkuName": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Premium_LRS",
                "Premium_ZRS"
              ],
              "metadata": {
                "description": "Storage SKU"
              }
            }
          },
          "variables": {
            "containerRegistryNameCleanedHyphens": "[replace(parameters('containerRegistryName'), '-', '')]",
            "containerRegistryNameCleanedSpaces": "[replace(variables('containerRegistryNameCleanedHyphens'), ' ', '')]",
            "containerRegistryNameCleaned": "[variables('containerRegistryNameCleanedSpaces')]",
            "storageNameCleanedHyphens": "[replace(parameters('storageName'), '-', '')]",
            "storageNameCleanedSpaces": "[replace(variables('storageNameCleanedHyphens'), ' ', '')]",
            "storageNameCleaned": "[variables('storageNameCleanedSpaces')]",
            "uniqueSuffix": "[substring(uniqueString(deployment().properties.templateHash, deployment().name), 0, 6)]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "DisableIpMasking": false,
                "DisableLocalAuth": false,
                "Flow_Type": "Bluefield",
                "ForceCustomerStorageForProfiler": false,
                "ImmediatePurgeDataOn30Days": true,
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Disabled",
                "Request_Source": "rest"
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2021-09-01",
              "name": "[variables('containerRegistryNameCleaned')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": true,
                "dataEndpointEnabled": false,
                "networkRuleBypassOptions": "AzureServices",
                "networkRuleSet": {
                  "defaultAction": "Deny"
                },
                "policies": {
                  "quarantinePolicy": {
                    "status": "enabled"
                  },
                  "retentionPolicy": {
                    "status": "enabled",
                    "days": 7
                  },
                  "trustPolicy": {
                    "status": "disabled",
                    "type": "Notary"
                  }
                },
                "publicNetworkAccess": "Disabled",
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('keyvaultName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2021-10-01",
              "name": "[parameters('aiServicesName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "S0"
              },
              "kind": "AIServices",
              "properties": {
                "apiProperties": {
                  "statisticsEnabled": false
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[variables('storageNameCleaned')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('storageSkuName')]"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowCrossTenantReplication": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": false,
                  "services": {
                    "blob": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "file": {
                      "enabled": true,
                      "keyType": "Account"
                    },
                    "queue": {
                      "enabled": true,
                      "keyType": "Service"
                    },
                    "table": {
                      "enabled": true,
                      "keyType": "Service"
                    }
                  }
                },
                "isHnsEnabled": false,
                "isNfsV3Enabled": false,
                "keyPolicy": {
                  "keyExpirationPeriodInDays": 7
                },
                "largeFileSharesState": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "aiservicesID": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName'))]"
            },
            "aiservicesTarget": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('aiServicesName')), '2021-10-01').endpoint]"
            },
            "storageId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
            },
            "keyvaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
            },
            "containerRegistryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryNameCleaned'))]"
            },
            "applicationInsightsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ai-{0}-{1}-deployment', variables('name'), variables('uniqueSuffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aiHubFriendlyName": {
            "value": "[variables('aiHubFriendlyName')]"
          },
          "aiHubDescription": {
            "value": "[variables('aiHubDescription')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "aiServicesId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesID.value]"
          },
          "aiServicesTarget": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.aiservicesTarget.value]"
          },
          "applicationInsightsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.applicationInsightsId.value]"
          },
          "containerRegistryId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.containerRegistryId.value]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.keyvaultId.value]"
          },
          "storageAccountId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix'))), '2022-09-01').outputs.storageId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region of the deployment"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to add to the resources"
              }
            },
            "aiHubName": {
              "type": "string",
              "metadata": {
                "description": "AI hub name"
              }
            },
            "aiHubFriendlyName": {
              "type": "string",
              "defaultValue": "[parameters('aiHubFriendlyName')]",
              "metadata": {
                "description": "AI hub display name"
              }
            },
            "aiHubDescription": {
              "type": "string",
              "metadata": {
                "description": "AI hub description"
              }
            },
            "applicationInsightsId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the application insights resource for storing diagnostics logs"
              }
            },
            "containerRegistryId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the container registry resource for storing docker images"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the key vault resource for storing connection strings"
              }
            },
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the storage account resource for storing experimentation outputs"
              }
            },
            "aiServicesId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services resource"
              }
            },
            "aiServicesTarget": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the AI Services endpoint"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces/connections",
              "apiVersion": "2024-01-01-preview",
              "name": "[format('{0}/{1}', parameters('AIDeploymentName'), format('{0}-connection-AzureOpenAI', parameters('AIDeploymentName')))]",
              "properties": {
                "category": "AzureOpenAI",
                "target": "[parameters('aiServicesTarget')]",
                "authType": "ApiKey",
                "isSharedToAll": true,
                "credentials": {
                  "key": "[format('{0}', listKeys(parameters('aiServicesId'), '2021-10-01').key1)]"
                },
                "metadata": {
                  "ApiType": "Azure",
                  "ResourceId": "[parameters('aiServicesId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('AIDeploymentName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2023-08-01-preview",
              "name": "[parameters('AIDeploymentName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "friendlyName": "[parameters('aiHubFriendlyName')]",
                "description": "[parameters('aiHubDescription')]",
                "keyVault": "[parameters('keyVaultId')]",
                "storageAccount": "[parameters('storageAccountId')]",
                "applicationInsights": "[parameters('applicationInsightsId')]",
                "containerRegistry": "[parameters('containerRegistryId')]"
              },
              "kind": "hub"
            }
          ],
          "outputs": {
            "aiHubID": {
              "type": "string",
              "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('AIDeploymentName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('dependencies-{0}-deployment', variables('uniqueSuffix')))]"
      ]
    }
  ]
}

// Link to Hub: 
//https://ai.azure.com/manage/overview?tid=0edca472-0b71-46e6-96c7-0a68c10dcb96&wsid=/subscriptions/f4114d19-3922-4565-9f12-8ec84abea1b2/resourcegroups/AIStudioAndHub/providers/Microsoft.MachineLearningServices/workspaces/aih-demo-7l6i